{"version":3,"file":"reveal.js","sources":["../js/components/playback.js","../js/config.js","../js/utils/util.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/device.js","../js/controllers/controls.js","../js/controllers/focus.js","../js/controllers/fragments.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/notes.js","../js/controllers/overview.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/pointer.js","../js/controllers/print.js","../js/controllers/progress.js","../../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/controllers/touch.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Eplicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considerd\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.substr( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.substr( 2, 2 ), 16 ),\n\t\t\tb: parseInt( hex6.substr( 4, 2 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n}\n","const UA = navigator.userAgent;\nconst testElement = document.createElement( 'div' );\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );\n\n// Flags if we should use zoom instead of transform to scale\n// up slides. Zoom produces crisper results but has a lot of\n// xbrowser quirks so we only use it in whitelisted browsers.\nexport const supportsZoom = 'zoom' in testElement.style && !isMobile &&\n\t\t\t\t( isChrome || /Version\\/[\\d\\.]+.*Safari/.test( UA ) );","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( element ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not avaialble.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.history.replaceState( null, null, '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","/**\n * Handles the showing and \n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. As an <aside class=\"notes\"> inside of the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using an <aside class=\"notes\"> element\n\t\tlet notesElement = slide.querySelector( 'aside.notes' );\n\t\tif( notesElement ) {\n\t\t\treturn notesElement.innerHTML;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registed plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all regisered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n}\n","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst doingSlideNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\t// Re-run the slide layout so that r-fit-text is applied based on\n\t\t\t\t// the printed slide size\n\t\t\t\tthis.Reveal.slideContent.layout( slide )\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject slide numbers if `slideNumbers` are enabled\n\t\t\t\tif( doingSlideNumbers ) {\n\t\t\t\t\tconst slideNumber = index + 1;\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\n}","/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);","import { extend, queryAll, closest, getMimeTypeFromFile } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the given slide,\n\t * if there are any.\n\t */\n\tlayout( slide ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( slide.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n}","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport Controls from './controllers/controls.js'\nimport Focus from './controllers/focus.js'\nimport Fragments from './controllers/fragments.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Notes from './controllers/notes.js'\nimport Overview from './controllers/overview.js'\nimport Plugins from './controllers/plugins.js'\nimport Pointer from './controllers/pointer.js'\nimport Print from './controllers/print.js'\nimport Progress from './controllers/progress.js'\nimport SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport Touch from './controllers/touch.js'\nimport {\n\tHORIZONTAL_SLIDES_SELECTOR, POST_MESSAGE_METHOD_BLACKLIST, SLIDES_SELECTOR, VERTICAL_SLIDES_SELECTOR\n} from './utils/constants.js'\nimport * as Device from './utils/device.js'\nimport * as Util from './utils/util.js'\n\n// The reveal.js version\nexport const VERSION = '4.2.1';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2021 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', event => {\n\t\t\t\tlet data = event.data;\n\n\t\t\t\t// Make sure we're dealing with JSON\n\t\t\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\t\t\tdata = JSON.parse( data );\n\n\t\t\t\t\t// Check if the requested method can be found\n\t\t\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Zoom Scaling\n\t\t\t\t\t// Content remains crisp no matter how much we scale. Side\n\t\t\t\t\t// effects are minor differences in text layout and iframe\n\t\t\t\t\t// viewports changing size. A 200x200 iframe viewport in a\n\t\t\t\t\t// 2x zoomed presentation ends up having a 400x400 viewport.\n\t\t\t\t\tif( scale > 1 && Device.supportsZoom && window.devicePixelRatio < 2 ) {\n\t\t\t\t\t\tdom.slides.style.zoom = scale;\n\t\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t\t}\n\t\t\t\t\t// Transform Scaling\n\t\t\t\t\t// Content layout remains the exact same when scaled up.\n\t\t\t\t\t// Side effect is content becoming blurred, especially with\n\t\t\t\t\t// high scale values on ldpi screens.\n\t\t\t\t\telse {\n\t\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before hte slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tfragments.sortAll();\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment' ).forEach( fragment => {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment.visible' ).forEach( fragment => {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// availalbe if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["Playback","constructor","container","progressCheck","this","diameter","diameter2","thickness","playing","progress","progressOffset","canvas","document","createElement","className","width","height","style","context","getContext","appendChild","render","setPlaying","value","wasPlaying","animate","progressBefore","requestAnimationFrame","bind","radius","x","y","iconSize","endAngle","Math","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","translate","fillRect","moveTo","lineTo","restore","on","type","listener","addEventListener","off","removeEventListener","destroy","parentNode","removeChild","margin","minScale","maxScale","controls","controlsTutorial","controlsLayout","controlsBackArrows","slideNumber","showSlideNumber","hashOneBasedIndex","hash","respondToHashChanges","history","keyboard","keyboardCondition","disableLayout","overview","center","touch","loop","rtl","navigationMode","shuffle","fragments","fragmentInURL","embedded","help","pause","showNotes","showHiddenSlides","autoPlayMedia","preloadIframes","autoAnimate","autoAnimateMatcher","autoAnimateEasing","autoAnimateDuration","autoAnimateUnmatched","autoAnimateStyles","autoSlide","autoSlideStoppable","autoSlideMethod","defaultTiming","mouseWheel","previewLinks","postMessage","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","backgroundTransition","parallaxBackgroundImage","parallaxBackgroundSize","parallaxBackgroundRepeat","parallaxBackgroundPosition","parallaxBackgroundHorizontal","parallaxBackgroundVertical","pdfMaxPagesPerSlide","Number","POSITIVE_INFINITY","pdfSeparateFragments","pdfPageHeightOffset","viewDistance","mobileViewDistance","display","hideInactiveCursor","hideCursorTime","dependencies","plugins","extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","createSingletonNode","tagname","classname","innerHTML","arguments","length","undefined","nodes","testNode","node","createStyleSheet","tag","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","Reveal","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","indexOf","fromSlideIndex","hasAttribute","getAttribute","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","dataset","slideDirection","css","getAutoAnimatableElements","map","elements","autoAnimateElements","to","options","getConfig","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","forEach","unmatchedElement","unmatchedOptions","id","delay","push","autoAnimateTarget","join","getComputedStyle","fontWeight","dispatchEvent","data","sheet","getRevealElement","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","contains","styles","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","Object","keys","inheritedOptions","autoAnimatedParent","autoAnimateDelay","direction","config","properties","bounds","measure","getBoundingClientRect","offsetLeft","offsetTop","offsetWidth","computedStyles","property","pairs","getAutoAnimatePairs","reserved","filter","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","slice","key","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","querySelector","concat","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","substr","rgb","rgba","Backgrounds","create","getHorizontalSlides","slideh","backgroundStack","createBackground","slidev","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","setTimeout","slide","contentElement","slideBackgroundElement","slideBackgroundContentElement","sync","background","backgroundVideo","backgroundIframe","backgroundColor","backgroundOpacity","dataPreload","removeAttribute","opacity","test","setAttribute","contrastColor","computedBackgroundStyle","window","update","includeAll","currentSlide","getCurrentSlide","indices","getIndices","currentBackground","horizontalPast","horizontalFuture","childNodes","backgroundh","h","backgroundv","v","previousBackground","slideContent","stopEmbeddedContent","unloadIframes","shouldPreload","startEmbeddedContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","horizontalOffset","slideWidth","horizontalSlideCount","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","UA","navigator","userAgent","testElement","isMobile","platform","maxTouchPoints","isChrome","isAndroid","supportsZoom","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","configure","oldConfig","pointerEvents","eventName","unbind","routes","availableRoutes","left","right","up","down","fragmentsRoutes","prev","next","isVerticalSlide","hasNavigatedVertically","hasNavigatedHorizontally","event","preventDefault","onUserInput","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","state","isFocused","Fragments","disable","enable","getSlidesElement","hiddenFragments","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","max","wasVisible","announceStatus","getStatusText","bubbles","min","goto","offset","lastVisibleFragment","writeURL","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","autoSlideWasPaused","isAutoSliding","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","tagName","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","isActive","MAX_VALUE","deactivate","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","getViewportElement","toggleAutoSlide","closeOverlay","toggle","cueAutoSlide","Location","writeURLTimeout","onWindowHashChange","getIndicesFromHash","name","bits","f","hashIndexBase","isNaN","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","clearTimeout","getHash","replaceState","pathname","url","s","encodeURIComponent","Notes","print","isPrintingPDF","getSlideNotes","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElement","Overview","active","onSlideClicked","activate","cancelAutoSlide","getBackgroundsElement","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","layout","indexh","indexv","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","override","loadScript","script","async","defer","src","onload","onreadystatechange","readyState","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","registeredPlugins","asyncDependencies","load","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","promise","hasPlugin","getPlugin","getRegisteredPlugins","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","showCursor","cursor","hideCursor","Date","now","detail","wheelDelta","Print","[object Object]","slides","doingSlideNumbers","pageWidth","floor","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","page","notes","notesSpacing","notesLayout","bottom","numberElement","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","Progress","onProgressClicked","bar","getProgress","getTotalSlides","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","defineProperty","fitty_module","_extends","assign","source","prototype","hasOwnProperty","w","toArray","nl","DrawState","fitties","redrawFrame","requestRedraw","cancelAnimationFrame","redraw","dirty","redrawAll","styleComputed","computeStyle","shouldPreStyle","applyStyle","fittiesToRedraw","shouldRedraw","calculateStyles","markAsClean","dispatchFitEvent","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","minSize","maxSize","whiteSpace","multiLine","getPropertyValue","preStyle","preStyleTestCompleted","fontSize","CustomEvent","oldValue","newValue","scaleFactor","fit","_","observeMutations","observer","disconnect","originalStyle","subscribe","unsubscribe","MutationObserver","observe","defaultOptions","subtree","childList","characterData","resizeDebounce","onWindowResized","fitty","observeWindowDelay","events","set","enabled","method","e","observeWindow","fitAll","fittyCreate","fittyOptions","publicFitties","newbie","unfreeze","freeze","SlideContent","startEmbeddedIframe","preload","media","sources","backgroundContent","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","isSpeakerNotes","video","muted","getMimeTypeFromFile","excludeIframes","iframe","maxHeight","maxWidth","backgroundIframeElement","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","autoplay","play","startEmbeddedMedia","catch","isAttachedToDOM","isVisible","currentTime","contentWindow","SlideNumber","slideNumberDisplay","getSlideNumber","format","visibility","getSlidePastCount","sep","formatNumber","delimiter","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","VERSION","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","defaultConfig","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","onFullscreenChange","JSON","parse","args","dispatchPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","_ref","createEvent","initEvent","parent","self","message","namespace","getState","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","devicePixelRatio","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","syncSlide","beforeSlide","random","slidesLength","printMode","reverse","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","anchor","fullscreenElement","webkitFullscreenElement","stopImmediatePropagation","currentTarget","API","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getPlugins","Deck","enqueuedAPICalls","_len","_key","deck"],"mappings":"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"}